group_by(condition, lang_groups) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = first(MMI_lang))
plt_data <- fulldata_s %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
group_by(condition, lang_groups, participant) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = first(MMI_lang))
ggplot(plt_data, aes(x = MMI_lang, y = meancorr / meanRT, color = lang_groups)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ condition) +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
ggplot(plt_data, aes(x = MMI_lang, y = meancorr / meanRT, color = lang_groups)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ condition) +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
plt_data <- fulldata_s %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
group_by(condition, lang_groups, participant) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = first(MMI_lang),
score = mean(score))
ggplot(plt_data, aes(x = MMI_lang, y = score, color = lang_groups)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ condition) +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ condition) +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
ggplot(fulldata_s, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ condition) +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
ggplot(fulldata_s, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_smooth(method = "lm") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
install.packages(Hmisc)
install.packages('Hmisc')
?Hmisc::rcorr()
?Hmisc::rcorr(fulldata_s$MMI_lang, fulldata_s$score)
Hmisc::rcorr(fulldata_s$MMI_lang, fulldata_s$score)
Hmisc::rcorr(plt_Data$MMI_lang, fulldata_s$score)
Hmisc::rcorr(plt_data$MMI_lang, fulldata_s$score)
plt_data <- fulldata_s %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
group_by(condition, participant) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = first(MMI_lang),
score = mean(score))
ggplot(fulldata_s, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_smooth(method = "lm") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_smooth(method = "lm") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
Hmisc::rcorr(plt_data$MMI_lang, fulldata_s$score)
Hmisc::rcorr(plt_data$MMI_lang, plt_data$score)
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
group_by(condition, participant) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = first(MMI_lang),
score = mean(score))
plt_data <- fulldata_s %>%
filter(condition == "oth") %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
group_by(condition, participant) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = first(MMI_lang),
score = mean(score))
Hmisc::rcorr(plt_data$MMI_lang, plt_data$score)
plt_data <- fulldata_s %>%
filter(condition == "oth") %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
group_by(condition, participant) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_weighted = first(MMI_weighted),
score = mean(score))
Hmisc::rcorr(plt_data$MMI_weighted, plt_data$score)
plt_data <- fulldata_s %>%
filter(condition == "oth") %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_weighted = first(MMI_weighted),
score = mean(score))
Hmisc::rcorr(plt_data$MMI_weighted, plt_data$score)
Hmisc::rcorr(plt_data$dominance, plt_data$score)
Hmisc::rcorr(plt_data$MMI_weighted, plt_data$score)
View(MMI)
View(MMI_s)
plt_data <- fulldata_s %>%
filter(condition == "oth") %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_weighted*MMI_lang)),
score = mean(score))
plt_data <- fulldata_s %>%
filter(condition == "oth") %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_weighted*MMI_lang),
score = mean(score))
Hmisc::rcorr(plt_data$MMI_lang, plt_data$score)
plt_data <- fulldata_s %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_weighted*MMI_lang),
score = mean(score))
Hmisc::rcorr(plt_data$MMI_lang, plt_data$score)
plt_data <- fulldata_s %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_lang),
score = mean(score))
Hmisc::rcorr(plt_data$MMI_lang, plt_data$score)
polychronicity <- surveydata %>% select(participant, polychron)
surveydata_s <- left_join(MMI_s, bilingualism_s, by = "participant")
surveydata_s <- left_join(surveydata_s, polychronicity, by = "participant")
surveydata_s <- left_join(surveydata_s, scores, by = "participant")
expdata_s <- exp_data %>%
group_by(participant, booktitle, corrAns) %>%
summarize(meanRT = psych::harmonic.mean(RT, na.rm = TRUE),
sdRT = sd(RT, na.rm=TRUE),
meancorr = mean(corr, na.rm = TRUE),
booklang = first(booklang),
trial = first(trial)) %>%
filter(!is.na(booktitle)) %>%
mutate(condition = case_when(booklang == "chinese" | booklang == "spanish" ~ "oth",
booklang == "english" ~ "eng",
TRUE ~ NA_character_),
match = recode(corrAns, "x" = "non-match", "z" = "match")) %>%
filter(!is.na(meanRT))
expdata_s$participant <- as.character(expdata_s$participant)
fulldata_s <- left_join(expdata_s, surveydata_s, by=c("participant", "booktitle"))
fulldata_s <- left_join(fulldata_s, responses, by = c("participant", "condition"))
fulldata_s <- fulldata_s %>%
pivot_longer('match-diff':'book-enj',
names_to = "question",
values_to = "response"
) %>%
filter(participant != 1002,
# participant != 1019,
# participant != 1041,
# participant != 1055,
other_lang != "other")
plt_data <- fulldata_s %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_lang),
score = mean(score))
Hmisc::rcorr(plt_data$MMI_lang, plt_data$score)
polychronicity <- surveydata %>% select(participant, polychron)
surveydata_s <- left_join(MMI_s, bilingualism_s, by = "participant")
surveydata_s <- left_join(surveydata_s, polychronicity, by = "participant")
surveydata_s <- left_join(surveydata_s, scores, by = "participant")
expdata_s <- exp_data %>%
group_by(participant, booktitle, corrAns) %>%
summarize(meanRT = psych::harmonic.mean(RT, na.rm = TRUE),
sdRT = sd(RT, na.rm=TRUE),
meancorr = mean(corr, na.rm = TRUE),
booklang = first(booklang),
trial = first(trial)) %>%
filter(!is.na(booktitle)) %>%
mutate(condition = case_when(booklang == "chinese" | booklang == "spanish" ~ "oth",
booklang == "english" ~ "eng",
TRUE ~ NA_character_),
match = recode(corrAns, "x" = "non-match", "z" = "match")) %>%
filter(!is.na(meanRT))
expdata_s$participant <- as.character(expdata_s$participant)
fulldata_s <- left_join(expdata_s, surveydata_s, by=c("participant", "booktitle"))
fulldata_s <- left_join(fulldata_s, responses, by = c("participant", "condition"))
fulldata_s <- fulldata_s %>%
pivot_longer('match-diff':'book-enj',
names_to = "question",
values_to = "response"
) %>%
filter(participant != 1002,
participant != 1019,
participant != 1041,
participant != 1055,
other_lang != "other")
plt_data <- fulldata_s %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_lang),
score = mean(score))
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_smooth(method = "lm") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
plt_data <- fulldata_s %>%
group_by(participant, condition) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_lang),
score = mean(score))
ggplot(plt_data, aes(x = MMI_lang, y = score. color = condition)) +
geom_point() +
geom_smooth(method = "lm") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
ggplot(plt_data, aes(x = MMI_lang, y = score, color = condition)) +
geom_point() +
geom_smooth(method = "lm") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
plt_data <- fulldata_s %>%
group_by(participant, condition) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_lang),
score = mean(score)) %>%
filter(condition == "eng")
Hmisc::rcorr(plt_data$MMI_lang, plt_data$score)
plt_data <- fulldata_s %>%
group_by(participant, condition) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_lang),
score = mean(score))
Hmisc::rcorr(plt_data$MMI_lang, plt_data$score)
plt_data <- fulldata_s %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_lang),
score = mean(score))
Hmisc::rcorr(plt_data$MMI_lang, plt_data$score)
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_smooth(method = "lm") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_jitter() +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_jitter() +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8)))
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_jitter() +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
labs(x = "Cross-Language Multitasking", y = "Cued Recall Rcore")
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point(color = "#c7c7c7") +
geom_jitter() +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
labs(x = "Cross-Language Multitasking", y = "Cued Recall Rcore")
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point(fill = "#c7c7c7") +
geom_jitter() +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
labs(x = "Cross-Language Multitasking", y = "Cued Recall Rcore")
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point(aes(color = "#c7c7c7")) +
geom_jitter() +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
labs(x = "Cross-Language Multitasking", y = "Cued Recall Rcore")
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point(color = "#c7c7c7") +
geom_jitter() +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
labs(x = "Cross-Language Multitasking", y = "Cued Recall Rcore")
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point(color = "#65a5d9") +
geom_jitter() +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
labs(x = "Cross-Language Multitasking", y = "Cued Recall Rcore")
ggplot(plt_data, aes(x = MMI_lang, y = score), color = "#65a5d9") +
geom_point() +
geom_jitter() +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
labs(x = "Cross-Language Multitasking", y = "Cued Recall Rcore")
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_jitter(color = "#65a5d9") +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
labs(x = "Cross-Language Multitasking", y = "Cued Recall Rcore")
ggplot(plt_data, aes(x = MMI_lang, y = score)) +
geom_point() +
geom_jitter(color = "#c7c7c7") +
geom_smooth(method = "lm", color = "#65a5d9") +
theme_few() +
theme(axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
labs(x = "Cross-Language Multitasking", y = "Cued Recall Rcore")
plt1 <- ggplot(filter(plt_data, other_lang == "mandarin"), aes(x = dominance, y = score)) +
geom_point(color = "#c7c7c7") +
geom_smooth(method = "lm", color = "#65a5d9") +
facet_wrap(~ booklang) +
theme_few(base_size=13) +
theme(text = element_text(family = "Arial"),
axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
xlim(-22, 22) +
labs(x = "Bilingualism", y = "Cued recall score", title = "Mandarin-Speaking Participants")
plt2 <- ggplot(filter(plt_data, other_lang == "spanish"), aes(x = dominance, y = score)) +
geom_point(color = "#c7c7c7") +
geom_smooth(method = "lm", color = "#65a5d9") +
facet_wrap(~ booklang) +
theme_few(base_size=13) +
theme(text = element_text(family = "Arial"),
axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
xlim(-22, 22) +
labs(x = "Bilingualism", y = "Cued recall score", title = "Spanish-Speaking Participants")
gridExtra::grid.arrange(plt1, plt2, nrow =2)
plt1 <- ggplot(filter(plt_data, other_lang == "mandarin"), aes(x = dominance, y = score)) +
geom_point(color = "#c7c7c7") +
geom_smooth(method = "lm", color = "#65a5d9") +
facet_wrap(~ booklang) +
theme_few(base_size=13) +
theme(text = element_text(family = "Arial"),
axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
xlim(-22, 22) +
labs(x = "Bilingualism", y = "Cued recall score", title = "Mandarin-Speaking Participants")
plt2 <- ggplot(filter(plt_data, other_lang == "spanish"), aes(x = dominance, y = score)) +
geom_point(color = "#c7c7c7") +
geom_smooth(method = "lm", color = "#65a5d9") +
facet_wrap(~ booklang) +
theme_few(base_size=13) +
theme(text = element_text(family = "Arial"),
axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
xlim(-22, 22) +
labs(x = "Bilingualism", y = "Cued recall score", title = "Spanish-Speaking Participants")
plt_data <- fulldata_s %>%
mutate(booklang = recode(booklang, "chinese" = "Mandarin-Language Book",
"spanish" = "Spanish-Language Book",
"english" = "English-Language Book"))
plt1 <- ggplot(filter(plt_data, other_lang == "mandarin"), aes(x = dominance, y = score)) +
geom_point(color = "#c7c7c7") +
geom_smooth(method = "lm", color = "#65a5d9") +
facet_wrap(~ booklang) +
theme_few(base_size=13) +
theme(text = element_text(family = "Arial"),
axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
xlim(-22, 22) +
labs(x = "Bilingualism", y = "Cued recall score", title = "Mandarin-Speaking Participants")
plt2 <- ggplot(filter(plt_data, other_lang == "spanish"), aes(x = dominance, y = score)) +
geom_point(color = "#c7c7c7") +
geom_smooth(method = "lm", color = "#65a5d9") +
facet_wrap(~ booklang) +
theme_few(base_size=13) +
theme(text = element_text(family = "Arial"),
axis.title.y = element_text(margin = margin(8,8,8,8)),
axis.title.x = element_text(margin = margin(8,8,8,8))) +
xlim(-22, 22) +
labs(x = "Bilingualism", y = "Cued recall score", title = "Spanish-Speaking Participants")
gridExtra::grid.arrange(plt1, plt2, nrow =2)
plt_data <- fulldata_s %>%
group_by(participant) %>%
mutate(lang_groups = case_when(dominance <= -10 ~ "hi_nat",
dominance > -10 & dominance < 10 ~ "mid",
dominance >= 10 ~ "hi_eng")) %>%
summarize(meanRT = mean(meanRT, na.rm=TRUE),
dominance = first(dominance),
meancorr = mean(meancorr, na.rm=TRUE),
MMI_lang = mean(MMI_lang),
score = mean(score))
Hmisc::rcorr(plt_data$MMI_lang, plt_data$score)
